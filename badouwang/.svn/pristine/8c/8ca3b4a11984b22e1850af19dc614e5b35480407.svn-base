<?php

/**
 * 文件工具类
 *
 * @author fanbo
 */
if(class_exists('FileHelper') != true)   
{   
  class FileHelper {
    //获取文件数量
    public static $hanler=null;
    private static function getFileNumber($dir){
        $num=sizeof(scandir($dir));
        $num=($num>2)?$num-2:0;
        return $num;
    }
    //获取目录中最大文件数目
    private static function getMaxDir($dir){
        $dirs=  scandir($dir);
        return max($dirs);
    }
    //获取上传目录
    public static function getUploadFileDir(){
         $uploadfile=  str_replace("\\",'/',substr(__DIR__,0,  strpos(__DIR__,'core')).'upload');
         if(!FileHelper::getFileNumber($uploadfile)){
             mkdir($uploadfile.'/1','0777');
             return $uploadfile.'/1';
         }else{
             $dir=self::getMaxDir($uploadfile);
             $max=self::getFileNumber($uploadfile.'/'.$dir);
             if($max>C('MAX_FILE_STORE')){
                 $max++;
                 $path=$uploadfile.'/'.$dir;
                 mkdir(path,'0777');
                 return $path;
             }else{
                return $uploadfile.'/'.$dir;
             }
         }
    }
    //保存上传图片
    public static function saveFile($uploadfile,$file,$limit,$handler){
        $verifyToken = md5('unique_salt' . $_POST['timestamp']);
        if (!empty($_FILES) && $_POST['token'] == $verifyToken) {
                $tempFile = $_FILES[$file]['tmp_name'];
                // 校验文件规则
                $fileTypes = $limit['extension'] ;
                $fileParts = pathinfo($_FILES[$file]['name']);
                if (in_array(strtolower($fileParts['extension']),$fileTypes)) {
                        if($_FILES[$file]['size']<$limit['size']){
                            move_uploaded_file($tempFile,$uploadfile);
                            //处理钩子
                            $res='';
                            if($handler){
                                $res=$handler->handle(array('imgname'=>$uploadfile));
                            }
                            return $res;
                        }else{
                            return '图像超出尺寸';
                        }
                } else {
                    
                        return '文件不支持';
                }
                
        }else{
            echo '验证失败';
        }
    }
} 
} 

